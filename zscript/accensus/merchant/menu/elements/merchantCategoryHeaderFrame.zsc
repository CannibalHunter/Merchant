class MerchantCategoryHeaderFrame : MerchZFFrame {

    MerchantCategoryToggleButton toggleBtn;
    MerchZFImage toggleIcon;
    
    static MerchantCategoryHeaderFrame create(
        Vector2 pos,
        Vector2 size,
        MerchantShopMenu menu,
        string category,
        MerchZFListFrame itemsFrame
    ) {
        let ret = new ('MerchantCategoryHeaderFrame');
        
        let btnHandler = new ('MerchantMenuHandler');
        btnHandler.menu = menu;

		ret.setBox(pos, size);
		ret.alpha = 1;

        ret.toggleBtn = MerchantCategoryToggleButton.create(
            pos,
            size,
            category,
            MerchZFBoxTextures.createTexturePixels('Graphics/CommonBackgroundNormal.png', (7,7), (14,14), true, true),
            MerchZFBoxTextures.createTexturePixels('Graphics/CommonBackgroundHover.png', (7,7), (14,14), true, true),
            MerchZFBoxTextures.createTexturePixels('Graphics/CommonBackgroundClick.png', (7,7), (14,14), true, true),
            MerchZFBoxTextures.createTexturePixels('Graphics/CommonBackground.png', (7,7), (14,14), true, true),
            fnt: BigFont,
            cmdHandler: btnHandler,
            command: 'toggleCategoryCollapse',
            targetEl: itemsFrame
        );
        ret.toggleBtn.pack(ret);
        
        ret.toggleIcon = MerchZFImage.create(
            pos + (MerchantShopMenu.Spacing, MerchantShopMenu.Spacing),
            size - (MerchantShopMenu.Spacing * 4, MerchantShopMenu.Spacing * 2),
            "CHIPARDN",
            MerchZFElement.AlignType_CenterRight
        );
		ret.toggleIcon.setDontBlockMouse(true);
        ret.toggleIcon.pack(ret);

        return ret;
    }

    override void ticker() {
        super.ticker();

        toggleIcon.setImage(toggleBtn.isOn() ? "CHIPARUP" : "CHIPARDN");
    }
}